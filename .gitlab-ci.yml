variables:
  REVISION: "0.0.1"
  CHANGELIST: "-SNAPSHOT"
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -Dmaven.repo.local=./.m2/repository"
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dmaven.repo.local=./.m2/repository"
  MAVEN_CLI_OPTS: "-s $SETTINGS_FILE --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  SONAR_OPTS: "-Dsonar.login=$SONAR_TOKEN -Dsonar.gitlab.project_id=$CI_PROJECT_PATH -Dsonar.gitlab.commit_sha=$CI_COMMIT_SHA -Dsonar.gitlab.ref_name=$CI_COMMIT_REF_NAME"

before_script:
  - chmod +x gradlew
  - export GRADLE_USER_HOME=`pwd`/.gradle

cache:
  paths:
    - ./.m2/repository
    - .gradle/wrapper
    - .gradle/caches
  key: $CI_COMMIT_REF_SLUG

stages:
  - test
  - deploy
  - publish

test:
  stage: test
  script:
    - ./gradlew $GRADLE_OPTS check

  ###############################################################################
  # For `master` branch run `mvn deploy` automatically.
  # Here you need to decide whether you want to use JDK7 or 8.
  # To get this working you need to define a volume while configuring your gitlab-ci-multi-runner.
  # Mount your `settings.xml` as `/root/.m2/settings.xml` which holds your secrets.
  # See https://maven.apache.org/settings.html

deploy:jar:
  stage: deploy
  script:
    - pwd
    - id
    - ls
    - ./gradlew publish -s -DinstallAtEnd=true -DdeployAtEnd=true
  only:
    - master
  environment:
    name: production - v$REVISION$CHANGELIST

publish:
  stage: publish
  tags:
    - pms
    - api
  before_script:
    - echo "before_publish"
    - chmod +x gradlew
    - export GRADLE_USER_HOME=`pwd`/.gradle
  script:
    - ./gradlew $GRADLE_OPTS clean assemble
    - ./gradlew publish
    - pwd
    - ls
    - cd ../
    - sh publish.sh
  when: manual
  only:
    - master